<?php
if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class sspd extends CI_Controller
{
	private $module = 'penerimaan';
	private $controller = 'sspd';

    function __construct()
    {
        parent::__construct();
        if (!is_login()) {
            echo "<script>window.location.replace('" . base_url() . "');</script>";
            exit;
        }

        $this->load->model(array(
            'apps_model', 'sptpd_model', 'sspd_model', 'penerimaan_model'
        ));

		$this->load->helper(active_module());
    }

	function load_auth() {
        $this->load->library('module_auth', array('module' => $this->module));
    }

    public function index()
    {
		$this->load_auth();
        if (!$this->module_auth->read) {
            $this->session->set_flashdata('msg_warning', $this->module_auth->msg_read);
            redirect('info');
        }

        $data['current']    = $this->module;
        $data['controller'] = $this->controller;
        $data['apps']       = $this->apps_model->get_active_only();

		$options = array(
			'1' => 'BLM PROSES',
			'2' => 'SDH PROSES',
		);
		$js = 'id="proses_id" class="input-small" style="width:100px;"';
		$select = form_dropdown('proses_id', $options, 1, $js);
		$select = preg_replace("/[\r\n]+/", "", $select);
		$data['select_proses_id'] = $select;

		$options = array(
			'1' => 'BLM VALIDASI',
			'2' => 'SDH VALIDASI',
		);
		$js = 'id="validasi_id" class="input-small" style="width:105px;"';
		$select = form_dropdown('validasi_id', $options, 1, $js);
		$select = preg_replace("/[\r\n]+/", "", $select);
		$data['select_validasi_id'] = $select;

		$this->load->view(active_module().'/vsspd', $data);
    }

    function grid()
    {
        $proses_id   = $this->uri->segment(4);
        $validasi_id = $this->uri->segment(5);
        $terimatgl = $this->uri->segment(6);
        $terimatgl = empty($terimatgl) ? date('Y-m-d') : date('Y-m-d', strtotime($terimatgl));

        $this->load->library('Datatables');

        /*
        // MASIH JOIN KE tbl_terima dan terima_line
		if ($proses_id == 2) {
			$this->datatables->select('s.id, get_sspdno(s.id) as sspdno, ss.sspdtgl, 
                case when k.id is null then get_sptno(s.id::int) else get_kohirno(s.id::int) end as nomor, 
				st.typenm, get_nopd(cu.id, true) as npwpd, c.nama, p.nama, 
                get_bulan(extract(month from s.masadari)::int, true) as masa_bulan, 
				s.pajak_terhutang, ss.bunga, (s.pajak_terhutang+ss.bunga) as bayar,
				cu.usaha_id, s.type_id', false);
			$this->datatables->from('pad_spt s');
            $this->datatables->join('pad_kohir k', 'k.spt_id=s.id', 'left');
			$this->datatables->join('pad_customer_usaha cu', 's.customer_usaha_id=cu.id', 'left');
			$this->datatables->join('pad_customer c', 'cu.customer_id=c.id', 'left');
			$this->datatables->join('pad_usaha u', 'cu.usaha_id=u.id', 'left');
			$this->datatables->join('pad_spt_type st', 'st.id=s.type_id', 'left');
            $this->datatables->join('pad_jenis_pajak p', 's.pajak_id=p.id', 'left');
			$this->datatables->join('pad_sspd ss', 'ss.spt_id=s.id', 'left');
			$this->datatables->join('pad_terima_line tl', 'tl.spt_id=s.id and tl.rekening_id=s.rekening_id', 'left');

			if ($this->input->get('iSortCol_0') == 1) {
				$sort = $this->input->get('sSortDir_0');
				$this->datatables->order_by('ss.sspdno', $sort);
			}
            $this->datatables->rupiah_column('9');
		} else {
			$this->datatables->select('s.id, get_sspdno(s.id) as sspdno, ss.sspdtgl, 
                case when k.id is null then get_sptno(s.id::int) else get_kohirno(s.id::int) end as nomor, 
				st.typenm, get_nopd(cu.id, true) as npwpd, c.nama, p.nama, 
                get_bulan(extract(month from s.masadari)::int, true) as masa_bulan, 
                s.jatuhtempotgl, s.dasar, s.pajak_terhutang,
				cu.usaha_id, s.type_id', false);
			$this->datatables->from('pad_spt s');
            $this->datatables->join('pad_kohir k', 'k.spt_id=s.id', 'left');
			$this->datatables->join('pad_customer_usaha cu', 's.customer_usaha_id=cu.id', 'left');
			$this->datatables->join('pad_customer c', 'cu.customer_id=c.id', 'left');
			$this->datatables->join('pad_usaha u', 'cu.usaha_id=u.id', 'left');
			$this->datatables->join('pad_spt_type st', 'st.id=s.type_id', 'left');
            $this->datatables->join('pad_jenis_pajak p', 's.pajak_id=p.id', 'left');
			$this->datatables->join('pad_sspd ss', 'ss.spt_id=s.id', 'left');
			$this->datatables->join('pad_terima_line tl', 'tl.spt_id=s.id and tl.rekening_id=s.rekening_id', 'left');

			if ($this->input->get('iSortCol_0') == 1) {
				$sort = $this->input->get('sSortDir_0');
				$this->datatables->order_by('s.sptno', $sort);
			}
            $this->datatables->date_column('9');
		}
        */
        
		if ($proses_id == 2) {
			$this->datatables->select('s.id, get_sspdno(s.id) as sspdno, ss.sspdtgl, 
                case when k.id is null then get_sptno(s.id::int) else get_kohirno(s.id::int) end as nomor, 
				st.typenm, get_nopd(cu.id, true) as npwpd, c.nama, p.nama, 
                get_bulan(extract(month from s.masadari)::int, true) as masa_bulan, 
				s.pajak_terhutang, ss.bunga, (s.pajak_terhutang+ss.bunga) as bayar,
				cu.usaha_id, s.type_id', false);
			$this->datatables->from('pad_spt s');
            $this->datatables->join('pad_kohir k', 'k.spt_id=s.id', 'left');
			$this->datatables->join('pad_customer_usaha cu', 's.customer_usaha_id=cu.id', 'left');
			$this->datatables->join('pad_customer c', 'cu.customer_id=c.id', 'left');
			$this->datatables->join('pad_usaha u', 'cu.usaha_id=u.id', 'left');
			$this->datatables->join('pad_spt_type st', 'st.id=s.type_id', 'left');
            $this->datatables->join('pad_jenis_pajak p', 's.pajak_id=p.id', 'left');
			$this->datatables->join('pad_sspd ss', 'ss.spt_id=s.id', 'left');
			$this->datatables->join('pad_terima_line tl', 'tl.spt_id=s.id and tl.rekening_id=s.rekening_id', 'left');

			if ($this->input->get('iSortCol_0') == 1) {
				$sort = $this->input->get('sSortDir_0');
				$this->datatables->order_by('ss.sspdno', $sort);
			}
            $this->datatables->rupiah_column('9');
		} else {
			$this->datatables->select('s.id, get_sspdno(s.id) as sspdno, ss.sspdtgl, 
                case when k.id is null then get_sptno(s.id::int) else get_kohirno(s.id::int) end as nomor, 
				st.typenm, get_nopd(cu.id, true) as npwpd, c.nama, p.nama, 
                get_bulan(extract(month from s.masadari)::int, true) as masa_bulan, 
                s.jatuhtempotgl, s.dasar, s.pajak_terhutang,
				cu.usaha_id, s.type_id', false);
			$this->datatables->from('pad_spt s');
            $this->datatables->join('pad_kohir k', 'k.spt_id=s.id', 'left');
			$this->datatables->join('pad_customer_usaha cu', 's.customer_usaha_id=cu.id', 'left');
			$this->datatables->join('pad_customer c', 'cu.customer_id=c.id', 'left');
			$this->datatables->join('pad_usaha u', 'cu.usaha_id=u.id', 'left');
			$this->datatables->join('pad_spt_type st', 'st.id=s.type_id', 'left');
            $this->datatables->join('pad_jenis_pajak p', 's.pajak_id=p.id', 'left');
			$this->datatables->join('pad_sspd ss', 'ss.spt_id=s.id', 'left');
			$this->datatables->join('pad_terima_line tl', 'tl.spt_id=s.id and tl.rekening_id=s.rekening_id', 'left');

			if ($this->input->get('iSortCol_0') == 1) {
				$sort = $this->input->get('sSortDir_0');
				$this->datatables->order_by('s.sptno', $sort);
			}
            $this->datatables->date_column('9');
		}

		$this->datatables->where('s.tahun', pad_tahun_anggaran());
		
		if ($proses_id == 2) 
			$this->datatables->where('ss.id is not NULL');
		else {
			$this->datatables->where('ss.id is NULL');
            //menampilkan skpd yg sudah diproses saja
			$this->datatables->where("(s.so='S' or (s.so='O' and k.id is not null))", null, false);
        }
			
		if ($validasi_id == 2) 
			$this->datatables->where('tl.id is not NULL');
		else
			$this->datatables->where('tl.id is NULL');
			
        if($this->input->get('sSearch') == '')
            if ($proses_id == 2) 
                $this->datatables->filter('ss.sspdtgl', $terimatgl);
            else 
                $this->datatables->filter("(s.terimatgl='{$terimatgl}' or k.kohirtgl='{$terimatgl}')", null, false);
                
		$this->datatables->rupiah_column('10,11');
		$this->datatables->date_column('2');

        echo $this->datatables->generate();
    }

    //admin
	public function cek_bunga()
	{
		$this->load_auth();
        if (!$this->module_auth->create) {
            $this->session->set_flashdata('msg_warning', $this->module_auth->msg_create);
            redirect(active_module_url($this->controller));
        }
		
        $spt_id   = $this->uri->segment(4);
        if ($spt_id && $sptpd = $this->sptpd_model->get($spt_id)) {			
			// hitung bunga (telat bayar)
			$tgl_proses = new DateTime(Date('Y-m-d'));
			$tgl_jtempo = new DateTime(Date('Y-m-d', strtotime($sptpd->jatuhtempotgl)));

			$diff = $tgl_proses->diff($tgl_jtempo);
			$nbln = (($diff->format('%y') * 12) + $diff->format('%m'));
			$nbln = $tgl_proses <= $tgl_jtempo ? 0 : $nbln;
			$nbln = $nbln > 24 ? 24 : $nbln;
			
			$pajak = $sptpd->pajak_terhutang; //($sptpd->dasar * $sptpd->tarif) + $sptpd->kenaikan + $sptpd->denda ;// - (float)$sptpd->kompensasi - (float)$sptpd->setoran - (float)$sptpd->lain2;
			$bunga = (float)$pajak * (int)$nbln * (float)pad_bunga() + (float)$sptpd->bunga;
            
            if($bunga>0) {
                $msg = "Pembayaran telah melewati jatuh tempo!\n";
                $msg.= "# Pajak : Rp. ".number_format($pajak,0,',','.')."\n";
                $msg.= "# Telat : ".$nbln." bulan\n";
                $msg.= "# Bunga : Rp. ".number_format($bunga,0,',','.')."\n";
                $msg.= "# TOTAL : Rp. ".number_format($pajak+$bunga,0,',','.')."\n";
                echo $msg;
            } else
                echo "nobunga";
		} else echo "hmm";
	}
    
	public function proses_sspd()
	{
		$this->load_auth();
        if (!$this->module_auth->create) {
            $this->session->set_flashdata('msg_warning', $this->module_auth->msg_create);
            redirect(active_module_url($this->controller));
        }
		
        $spt_id   = $this->uri->segment(4);
        if ($spt_id && $sptpd = $this->sptpd_model->get($spt_id)) {			
			// hitung bunga (telat bayar)
			$tgl_proses = new DateTime(Date('Y-m-d'));
			$tgl_jtempo = new DateTime(Date('Y-m-d', strtotime($sptpd->jatuhtempotgl)));

			$diff = $tgl_proses->diff($tgl_jtempo);
			$nbln = (($diff->format('%y') * 12) + $diff->format('%m'));
			$nbln = $tgl_proses <= $tgl_jtempo ? 0 : $nbln;
			$nbln = $nbln > 24 ? 24 : $nbln;
			
			$pajak = $sptpd->pajak_terhutang; //($sptpd->dasar * $sptpd->tarif) + $sptpd->kenaikan + $sptpd->denda ;// - (float)$sptpd->kompensasi - (float)$sptpd->setoran - (float)$sptpd->lain2;
			$bunga = (float)$pajak * (int)$nbln * (float)pad_bunga() + (float)$sptpd->bunga;
			// end hitung bunga
			
            date_default_timezone_set("Asia/Jakarta"); 
            
			$sspdno = $this->sspd_model->generate_sspdno(pad_tahun_anggaran());
			$update_data = array (
				'spt_id' => $spt_id,
				'sspdno' => $sspdno,
				'tahun' => pad_tahun_anggaran(),
				'sspdtgl' => date('Y-m-d'),
                'sspdjam' => date('H:i:s'),
				'bunga' => $bunga,
				'bulan_telat' => (int)$nbln,

				'enabled' => 1,
				'created' => date('Y-m-d'),
				'create_uid' => sipkd_user_id(),
			);

			$this->sspd_model->save($update_data);
			
			echo "ok";
		} else echo "hmm";
	}
	
	public function batal_sspd()
	{
		$this->load_auth();
        if (!$this->module_auth->delete) {
            $this->session->set_flashdata('msg_warning', $this->module_auth->msg_delete);
            redirect(active_module_url($this->controller));
        }
		
        $spt_id   = $this->uri->segment(4);
        if ($spt_id && $sptpd = $this->sptpd_model->get($spt_id)) {
			$terima_id = $this->penerimaan_model->get_terima_id_by_spt($spt_id);
            if($terima_id)
                return "not_ok";
            else
                $this->sspd_model->delete_by_spt($spt_id);		

			// $terima_id = $this->penerimaan_model->get_terima_id_by_spt($spt_id);			
            // $this->penerimaan_model->delete2_by_spt($spt_id);			
			// $this->penerimaan_model->delete_if_no_spt($terima_id);			
			echo "ok";
		} else echo "hmm";
	}
	
	// penermaan / validasi
	public function proses_validasi()
	{
		$this->load_auth();
        if (!$this->module_auth->create) {
            $this->session->set_flashdata('msg_warning', $this->module_auth->msg_create);
            redirect(active_module_url($this->controller));
        }
		
        $spt_id = $this->uri->segment(4);
		$sptpd  = $this->sptpd_model->get($spt_id);
		$sspd   = $this->sspd_model->get_by_spt($spt_id);
		
        if ($spt_id && $sptpd && $sspd) {
            $terimano = $this->penerimaan_model->max_terimano(pad_tahun_anggaran());
			if ($sspd->hitung_bunga == 1 && $sspd->bunga > 0)
				$jmlterima = (float)$sptpd->pajak_terhutang + (float)$sspd->bunga;
			else 
				$jmlterima = (float)$sptpd->pajak_terhutang;
				
			// terima
            $update_data = array(
				'tahun' => pad_tahun_anggaran(),
				'terimano' => $terimano,
				'terimatgl' => date('Y-m-d'),
				
				'jmlterima' => $jmlterima,
				
				'customer_id' => $sptpd->customer_id,
				'npwpd' => $this->load->model('subjek_pajak_model')->get_npwpd($sptpd->customer_id),
				
				'nobukti' => $sspd->sspdno,
				'notes' => 'Posting dari SSPD (Validasi)',
				
				'enabled' => 1,
				'created' => date('Y-m-d'),
				'create_uid' => sipkd_user_id(),
            );
            $new_id = $this->penerimaan_model->save($update_data);
			
			// terima line - rek pajak
            $update_data = array(
				'terima_id' => $new_id,
				'spt_id' => $spt_id,
				
				'rekening_id' => $sptpd->rekening_id,
				'pajak_id' => $sptpd->pajak_id,
				
				'amount' => $sptpd->pajak_terhutang,
				
				'enabled' => 1,
				'created' => date('Y-m-d', strtotime($sspd->sspdtgl)),
				'create_uid' => sipkd_user_id(),
            );
            $this->penerimaan_model->save2($update_data);
			
			// terima line - rek denda (bunga)
			if ($sspd->hitung_bunga == 1 && $sspd->bunga > 0) {
				$update_data = array(
					'terima_id' => $new_id,
					'spt_id' => $spt_id,
					
					'rekening_id' => $this->load->model('pajak_model')->get_rek_denda($sptpd->pajak_id),
					'pajak_id' => $sptpd->pajak_id,
					
					'amount' => $sspd->bunga,
					
					'enabled' => 1,
					'created' => date('Y-m-d', strtotime($sspd->sspdtgl)),
					'create_uid' => sipkd_user_id(),
				);
				$this->penerimaan_model->save2($update_data);
			}			
			
			echo "ok";
		} else echo "hmm";
	}
	
	public function batal_validasi()
	{
		$this->load_auth();
        if (!$this->module_auth->delete) {
            $this->session->set_flashdata('msg_warning', $this->module_auth->msg_delete);
            redirect(active_module_url($this->controller));
        }
		
        $spt_id   = $this->uri->segment(4);
        if ($spt_id && $sptpd = $this->sptpd_model->get($spt_id)) {			
			$terima_id = $this->penerimaan_model->get_terima_id_by_spt($spt_id);			
            $this->penerimaan_model->delete2_by_spt($spt_id);			
			$this->penerimaan_model->delete_if_no_spt($terima_id);			
			echo "ok";
		} else echo "hmm";
	}
    
	/* report */
	function show_rpt() {		
		$cls_mtd_html = $this->router->fetch_class()."/cetak/html";
		$cls_mtd_pdf  = $this->router->fetch_class()."/cetak/pdf";
		$data['rpt_html'] = active_module_url($cls_mtd_html). '?' . $_SERVER['QUERY_STRING'] ;
		$data['rpt_pdf']  = active_module_url($cls_mtd_pdf) . '?' . $_SERVER['QUERY_STRING'] ;
        $this->load->view('vjasper_viewer', $data);
	}

	function cetak() {		
		$type = $this->uri->segment(4);

		$qs   = urldecode ($_SERVER['QUERY_STRING']);
		parse_str($qs, $qs_data);
		
		$params = array();
		// foreach ($qs_data as $key => $val)
			// $params[$key] = $val;
					
		$sptpd  = $this->load->model('sptpd_model')->get($this->input->get('id'));
        $sspd   = $this->load->model('sspd_model')->get_by_spt($this->input->get('id'));
		$cu = $this->load->model('objek_pajak_model')->get($sptpd->customer_usaha_id);
        $report = $this->load->model('report_model')->get_report($cu->usaha_id, $sptpd->type_id);
        $bayar = $sptpd->pajak_terhutang+$sspd->bunga;
        
		switch ($this->input->get('rpt')) {
			case 'sspd':
                $rpt = $report->sspdnm;
				$params = array(
					'spt_id' => intval($sptpd->id),
				);
				break;
			case 'validasi':
                $rpt = 'validasi_00';
				$params = array(
					'spt_id' => intval($sptpd->id),
				);
				break;
		}
        
        $params = array_merge($params, array(
            "alamat" => pad_pemda_alamat(),
            "telp" => pad_pemda_telp(),
            "fax" => pad_pemda_fax(),
            "website" => pad_pemda_website(),
            "email" => pad_pemda_email(),
            "alamat_lengkap" => pad_pemda_alamat_lengkap(),
            "terbilang" => strtoupper(terbilang($bayar)),
            "pad_bunga" => (float)pad_bunga(),
            
            "daerah" => pad_pemda_daerah(),
            "dinas" => pad_pemda_nama(),            
            "logo" => base_url('assets/img/logorpt__.jpg'),
        ));
        
		$rpt = $rpt;
		// $rpt = $this->module.'/'.$rpt;
		
		$jasper = $this->load->library('Jasper');
		echo $jasper->cetak($rpt, $params, $type, false);
	}
}
